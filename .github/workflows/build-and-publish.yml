name: Build and publish docker images

on:
  push:
    branches:
      - main

jobs:
  ref-changes:
    name: Get affected services
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      bot: ${{ steps.filter.outputs.bot }}
      webClient: ${{ steps.filter.outputs.webClient }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            api:
              - 'services/api/**/*.(go|mod|sum)'
              - 'services/api/.golangci.json'
              - 'services/api/Dockerfile'
            bot:
              - 'services/bot/**/*.(ts|json)'
              - 'services/bot/.prettierrc'
              - 'services/bot/Dockerfile'
            webClient:
              - 'services/web-client/*.(json|html|js|ts)'
              - 'services/web-client/src/**'
              - 'services/web-client/public/**'
              - 'services/web-client/.prettierrc'
              - 'services/web-client/Dockerfile'

  build-publish-api:
    name: Build and publish API
    needs: ref-changes
    if: ${{ needs.ref-changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mardotio/voteflix-api
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Build and publish
        uses: docker/build-push-action@v6
        with:
          push: ${{ contains(fromJson('["push"]'), github.event_name) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: services/api

  build-publish-bot:
    name: Build and publish bot
    needs: ref-changes
    if: ${{ needs.ref-changes.outputs.bot == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mardotio/voteflix-bot
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Build and publish
        uses: docker/build-push-action@v6
        with:
          push: ${{ contains(fromJson('["push"]'), github.event_name) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: services/bot

  build-publish-web-client:
    name: Build and publish web client
    needs: ref-changes
    if: ${{ needs.ref-changes.outputs.webClient == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mardotio/voteflix-ui
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Build and publish
        uses: docker/build-push-action@v6
        with:
          push: ${{ contains(fromJson('["push"]'), github.event_name) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: services/web-client
